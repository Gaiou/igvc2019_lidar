<launch>
	<!-- Setting parameters, use spaces not tabs -->
	<rosparam>
      covariance: 0.01
      imu_topic: imu/imu
    </rosparam>

	<!-- Target Frame Launch -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="velodyne_frame" args="0 0 0 0 0 0 1 base_link velodyne"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="imu_frame" args="0 0 0 0 0 0 1 base_link imu" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_frame" args="0 0 0 0 0 0 1 odom base_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="ekf_frame" args="0 0 0 0 0 0 1 odom odom_combined" />

	<!-- EKF -->
	<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom_combined"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="debug" value="true"/>
    <param name="self_diagnose" value="true"/>
    <param name="gps_used" value="false"/>
  </node>

	<!-- imu-vn100 launch -->
		<include file="$(find igvc2019_lidar)/launch/vn_100_cont.launch" />

	<!-- Velodyne VLP16 Puck Launch -->
		<include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" />

	<!-- SLAM gmapping -->
		<node name="slam_gmapping" type="slam_gmapping" pkg="gmapping" output="screen">
		<param name="scan" value="/scan"/>
		<param name="linearUpdate" value="0.0"/>
		<param name="angularUpdate" value="0.0"/>
	</node>

	<!-- Debugging Utilities -->
		<node pkg="rqt_graph" type="rqt_graph" name="rqt_graph"/>
		<node pkg="rviz" type="rviz" name="rviz"/>
</launch>